{"ast":null,"code":"var _jsxFileName = \"/home/yodemente/proyectofinal/src/paginas/Java.jsx\";\nimport React from \"react\";\nimport Nav from \"./Nav\";\nimport Lenguaje from \"../imagenes/lenguaje.avif\";\nimport Acordeon from \"../componentes/Acordeon\";\nimport ColumnaJava from \"../componentes/ColumnaJava\";\nimport Footer from \"../componentes/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Java() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lenguajes de programacion: JAVA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"contenedor\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"El lenguaje de programaci\\xF3n Java fue desarrollado originalmente por James Gosling, de Sun Microsystems constituida en 1983 y posteriormente adquirida el 27 de enero de 2010 por la compa\\xF1\\xEDa Oracle, y publicado en 1995 como un componente fundamental de la plataforma Java de Sun Microsystems. Su sintaxis deriva en gran medida de C y C++, pero tiene menos utilidades de bajo nivel que cualquiera de ellos. Las aplicaciones de Java son compiladas a bytecode clase Java, que puede ejecutarse en cualquier m\\xE1quina virtual Java JVM sin importar la arquitectura de la computadora subyacente.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ColumnaJava, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"contenedor\",\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        width: \"720\",\n        height: \"480\",\n        src: \"https://www.youtube.com/embed/crBLydQRUsk\",\n        class: \"object-fit-scale\",\n        title: \"\\xBFQu\\xE9 es Java? En 3 minutos\",\n        frameborder: \"0\",\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\",\n        allowfullscreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"contenedor\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"La primera caracter\\xEDstica, orientado a objetos (\\u201COO\\u201D), se refiere a un m\\xE9todo de programaci\\xF3n y al dise\\xF1o del lenguaje. Aunque hay muchas interpretaciones para OO, una primera idea es dise\\xF1ar el software de forma que los distintos tipos de datos que usen est\\xE9n unidos a sus operaciones. As\\xED, los datos y el c\\xF3digo (funciones o m\\xE9todos) se combinan en entidades llamadas objetos. Un objeto puede verse como un paquete que contiene el \\u201Ccomportamiento\\u201D (el c\\xF3digo) y el \\u201Cestado\\u201D (datos). El principio es separar aquello que cambia de las cosas que permanecen inalterables. Frecuentemente, cambiar una estructura de datos implica un cambio en el c\\xF3digo que opera sobre los mismos, o viceversa. Esta separaci\\xF3n en objetos coherentes e independientes ofrece una base m\\xE1s estable para el dise\\xF1o de un sistema software. El objetivo es hacer que grandes proyectos sean f\\xE1ciles de gestionar y manejar, mejorando como consecuencia su calidad y reduciendo el n\\xFAmero de proyectos fallidos. Otra de las grandes promesas de la programaci\\xF3n orientada a objetos es la creaci\\xF3n de entidades m\\xE1s gen\\xE9ricas (objetos) que permitan la reutilizaci\\xF3n del software entre proyectos, una de las premisas fundamentales de la Ingenier\\xEDa del Software. Un objeto gen\\xE9rico \\u201Ccliente\\u201D, por ejemplo, deber\\xEDa en teor\\xEDa tener el mismo conjunto de comportamiento en diferentes proyectos, sobre todo cuando estos coinciden en cierta medida, algo que suele suceder en las grandes organizaciones. En este sentido, los objetos podr\\xEDan verse como piezas reutilizables que pueden emplearse en m\\xFAltiples proyectos distintos, posibilitando as\\xED a la industria del software construir proyectos de envergadura empleando componentes ya existentes y de comprobada calidad, conduciendo esto finalmente a una reducci\\xF3n dr\\xE1stica del tiempo de desarrollo. Podemos usar como ejemplo de objeto el aluminio. Una vez definidos datos (densidad, maleabilidad, etc.), y su \\u201Ccomportamiento\\u201D (soldar dos piezas, etc.), el objeto \\u201Caluminio\\u201D puede ser reutilizado en el campo de la construcci\\xF3n, del autom\\xF3vil, de la aviaci\\xF3n, etc. La reutilizaci\\xF3n del software ha experimentado resultados dispares, encontrando dos dificultades principales: el dise\\xF1o de objetos realmente gen\\xE9ricos es pobremente comprendido, y falta una metodolog\\xEDa para la amplia comunicaci\\xF3n de oportunidades de reutilizaci\\xF3n. Algunas comunidades de \\u201Cc\\xF3digo abierto\\u201D (open source) quieren ayudar en este problema dando medios a los desarrolladores para diseminar la informaci\\xF3n sobre el uso y versatilidad de objetos reutilizables y bibliotecas de objetos.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c = Java;\nvar _c;\n$RefreshReg$(_c, \"Java\");","map":{"version":3,"names":["React","Nav","Lenguaje","Acordeon","ColumnaJava","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","Java","children","fileName","_jsxFileName","lineNumber","columnNumber","className","width","height","src","class","title","frameborder","allow","allowfullscreen","_c","$RefreshReg$"],"sources":["/home/yodemente/proyectofinal/src/paginas/Java.jsx"],"sourcesContent":["import React from \"react\";\nimport  Nav  from \"./Nav\";\nimport Lenguaje from \"../imagenes/lenguaje.avif\";\nimport Acordeon from \"../componentes/Acordeon\";\nimport ColumnaJava from \"../componentes/ColumnaJava\";\nimport Footer from \"../componentes/Footer\";\n\nexport default function Java(){\n    return(\n        <><h1>Lenguajes de programacion: JAVA</h1>\n            <Nav></Nav>\n            <section className=\"contenedor\">\n                <p>\n                El lenguaje de programación Java fue desarrollado originalmente por James Gosling, de Sun Microsystems constituida en 1983 y posteriormente adquirida el 27 de enero de 2010 por la compañía Oracle, y publicado en 1995 como un componente fundamental de la plataforma Java de Sun Microsystems. Su sintaxis deriva en gran medida de C y C++, pero tiene menos utilidades de bajo nivel que cualquiera de ellos. Las aplicaciones de Java son compiladas a bytecode clase Java, que puede ejecutarse en cualquier máquina virtual Java JVM sin importar la arquitectura de la computadora subyacente.\n                </p>\n                <ColumnaJava></ColumnaJava>\n            </section>\n            <section className=\"contenedor\">\n                <iframe width=\"720\" height=\"480\" src=\"https://www.youtube.com/embed/crBLydQRUsk\" class=\"object-fit-scale\" title=\"¿Qué es Java? En 3 minutos\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen></iframe>\n            </section>\n            \n            <section className=\"contenedor\">\n                <p>\n                La primera característica, orientado a objetos (“OO”), se refiere a un método de programación y al diseño del lenguaje. Aunque hay muchas interpretaciones para OO, una primera idea es diseñar el software de forma que los distintos tipos de datos que usen estén unidos a sus operaciones. Así, los datos y el código (funciones o métodos) se combinan en entidades llamadas objetos. Un objeto puede verse como un paquete que contiene el “comportamiento” (el código) y el “estado” (datos). El principio es separar aquello que cambia de las cosas que permanecen inalterables. Frecuentemente, cambiar una estructura de datos implica un cambio en el código que opera sobre los mismos, o viceversa. Esta separación en objetos coherentes e independientes ofrece una base más estable para el diseño de un sistema software. El objetivo es hacer que grandes proyectos sean fáciles de gestionar y manejar, mejorando como consecuencia su calidad y reduciendo el número de proyectos fallidos.\n\nOtra de las grandes promesas de la programación orientada a objetos es la creación de entidades más genéricas (objetos) que permitan la reutilización del software entre proyectos, una de las premisas fundamentales de la Ingeniería del Software. Un objeto genérico “cliente”, por ejemplo, debería en teoría tener el mismo conjunto de comportamiento en diferentes proyectos, sobre todo cuando estos coinciden en cierta medida, algo que suele suceder en las grandes organizaciones. En este sentido, los objetos podrían verse como piezas reutilizables que pueden emplearse en múltiples proyectos distintos, posibilitando así a la industria del software construir proyectos de envergadura empleando componentes ya existentes y de comprobada calidad, conduciendo esto finalmente a una reducción drástica del tiempo de desarrollo. Podemos usar como ejemplo de objeto el aluminio. Una vez definidos datos (densidad, maleabilidad, etc.), y su “comportamiento” (soldar dos piezas, etc.), el objeto “aluminio” puede ser reutilizado en el campo de la construcción, del automóvil, de la aviación, etc.\n\nLa reutilización del software ha experimentado resultados dispares, encontrando dos dificultades principales: el diseño de objetos realmente genéricos es pobremente comprendido, y falta una metodología para la amplia comunicación de oportunidades de reutilización. Algunas comunidades de “código abierto” (open source) quieren ayudar en este problema dando medios a los desarrolladores para diseminar la información sobre el uso y versatilidad de objetos reutilizables y bibliotecas de objetos.\n                </p>\n            </section>\n            <Footer></Footer>\n\n        </>\n    )\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAQC,GAAG,MAAO,OAAO;AACzB,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,QAAQ,MAAM,yBAAyB;AAC9C,OAAOC,WAAW,MAAM,4BAA4B;AACpD,OAAOC,MAAM,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3C,eAAe,SAASC,IAAIA,CAAA,EAAE;EAC1B,oBACIH,OAAA,CAAAE,SAAA;IAAAE,QAAA,gBAAEJ,OAAA;MAAAI,QAAA,EAAI;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtCR,OAAA,CAACN,GAAG;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACXR,OAAA;MAASS,SAAS,EAAC,YAAY;MAAAL,QAAA,gBAC3BJ,OAAA;QAAAI,QAAA,EAAG;MAEH;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJR,OAAA,CAACH,WAAW;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,eACVR,OAAA;MAASS,SAAS,EAAC,YAAY;MAAAL,QAAA,eAC3BJ,OAAA;QAAQU,KAAK,EAAC,KAAK;QAACC,MAAM,EAAC,KAAK;QAACC,GAAG,EAAC,2CAA2C;QAACC,KAAK,EAAC,kBAAkB;QAACC,KAAK,EAAC,kCAA4B;QAACC,WAAW,EAAC,GAAG;QAACC,KAAK,EAAC,qGAAqG;QAACC,eAAe;MAAA;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7R,CAAC,eAEVR,OAAA;MAASS,SAAS,EAAC,YAAY;MAAAL,QAAA,eAC3BJ,OAAA;QAAAI,QAAA,EAAG;MAMH;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACVR,OAAA,CAACF,MAAM;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA,eAEnB,CAAC;AAEX;AAACU,EAAA,GA3BuBf,IAAI;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}