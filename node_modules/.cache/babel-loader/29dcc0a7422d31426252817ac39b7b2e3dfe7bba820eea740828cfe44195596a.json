{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function AcordeonPython(){return/*#__PURE__*/_jsxs(\"div\",{class:\"accordion\",id:\"accordionExample\",children:[/*#__PURE__*/_jsxs(\"div\",{class:\"accordion-item\",children:[/*#__PURE__*/_jsx(\"h2\",{class:\"accordion-header\",children:/*#__PURE__*/_jsx(\"button\",{class:\"accordion-button\",type:\"button\",\"data-bs-toggle\":\"collapse\",\"data-bs-target\":\"#collapseOne\",\"aria-expanded\":\"true\",\"aria-controls\":\"collapseOne\",children:\"Caracter\\xEDsticas y paradigmas\"})}),/*#__PURE__*/_jsx(\"div\",{id:\"collapseOne\",class:\"accordion-collapse collapse show\",\"data-bs-parent\":\"#accordionExample\",children:/*#__PURE__*/_jsx(\"div\",{class:\"accordion-body\",children:\"Python es un lenguaje de programaci\\xF3n multiparadigma. Esto significa que m\\xE1s que forzar a los programadores a adoptar un estilo particular de programaci\\xF3n, permite varios estilos: programaci\\xF3n orientada a objetos, programaci\\xF3n imperativa y programaci\\xF3n funcional. Otros paradigmas est\\xE1n soportados mediante el uso de extensiones. Python usa tipado din\\xE1mico y conteo de referencias para la gesti\\xF3n de memoria. Una caracter\\xEDstica importante de Python es la resoluci\\xF3n din\\xE1mica de nombres; es decir, lo que enlaza un m\\xE9todo y un nombre de variable durante la ejecuci\\xF3n del programa (tambi\\xE9n llamado enlace din\\xE1mico de m\\xE9todos). Otro objetivo del dise\\xF1o del lenguaje es la facilidad de extensi\\xF3n. Se pueden escribir nuevos m\\xF3dulos f\\xE1cilmente en C o C++. Python puede incluirse en aplicaciones que necesitan una interfaz programable.26 Aunque la programaci\\xF3n en Python podr\\xEDa considerarse en algunas situaciones hostil a la programaci\\xF3n funcional tradicional expuesta por Lisp, existen bastantes analog\\xEDas entre Python y los lenguajes minimalistas de la familia Lisp (como Scheme).\"})})]}),/*#__PURE__*/_jsxs(\"div\",{class:\"accordion-item\",children:[/*#__PURE__*/_jsx(\"h2\",{class:\"accordion-header\",children:/*#__PURE__*/_jsx(\"button\",{class:\"accordion-button collapsed\",type:\"button\",\"data-bs-toggle\":\"collapse\",\"data-bs-target\":\"#collapseTwo\",\"aria-expanded\":\"false\",\"aria-controls\":\"collapseTwo\",children:\"Filosof\\xEDa\"})}),/*#__PURE__*/_jsx(\"div\",{id:\"collapseTwo\",class:\"accordion-collapse collapse\",\"data-bs-parent\":\"#accordionExample\",children:/*#__PURE__*/_jsx(\"div\",{class:\"accordion-body\",children:\"Los usuarios de Python se refieren a menudo a la filosof\\xEDa de Python, que es bastante similar a la filosof\\xEDa de Unix. El c\\xF3digo que siga los principios de Python es reconocido como \\\"pyth\\xF3nico\\\". Estos principios fueron descritos por el desarrollador de Python Tim Peters en El Zen de Python:\"})})]})]});}","map":{"version":3,"names":["AcordeonPython","_jsxs","class","id","children","_jsx","type"],"sources":["/home/yodemente/proyectofinal/src/componentes/AcordeonPython.jsx"],"sourcesContent":["export default function AcordeonPython() {\n    return (\n        <div class=\"accordion\" id=\"accordionExample\">\n            <div class=\"accordion-item\">\n                <h2 class=\"accordion-header\">\n                    <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n                        Características y paradigmas\n                    </button>\n                </h2>\n                <div id=\"collapseOne\" class=\"accordion-collapse collapse show\" data-bs-parent=\"#accordionExample\">\n                    <div class=\"accordion-body\">\n                        Python es un lenguaje de programación multiparadigma. Esto significa que más que forzar a los programadores a adoptar un estilo particular de programación, permite varios estilos: programación orientada a objetos, programación imperativa y programación funcional. Otros paradigmas están soportados mediante el uso de extensiones.\n\n                        Python usa tipado dinámico y conteo de referencias para la gestión de memoria.\n\n                        Una característica importante de Python es la resolución dinámica de nombres; es decir, lo que enlaza un método y un nombre de variable durante la ejecución del programa (también llamado enlace dinámico de métodos).\n\n                        Otro objetivo del diseño del lenguaje es la facilidad de extensión. Se pueden escribir nuevos módulos fácilmente en C o C++. Python puede incluirse en aplicaciones que necesitan una interfaz programable.26\n\n                        Aunque la programación en Python podría considerarse en algunas situaciones hostil a la programación funcional tradicional expuesta por Lisp, existen bastantes analogías entre Python y los lenguajes minimalistas de la familia Lisp (como Scheme).\n                    </div>\n                </div>\n            </div>\n            <div class=\"accordion-item\">\n                <h2 class=\"accordion-header\">\n                    <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\n                        Filosofía\n                    </button>\n                </h2>\n                <div id=\"collapseTwo\" class=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\n                    <div class=\"accordion-body\">\n\n\n                        Los usuarios de Python se refieren a menudo a la filosofía de Python, que es bastante similar a la filosofía de Unix. El código que siga los principios de Python es reconocido como \"pythónico\". Estos principios fueron descritos por el desarrollador de Python Tim Peters en El Zen de Python:\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}"],"mappings":"wFAAA,cAAe,SAAS,CAAAA,cAAcA,CAAA,CAAG,CACrC,mBACIC,KAAA,QAAKC,KAAK,CAAC,WAAW,CAACC,EAAE,CAAC,kBAAkB,CAAAC,QAAA,eACxCH,KAAA,QAAKC,KAAK,CAAC,gBAAgB,CAAAE,QAAA,eACvBC,IAAA,OAAIH,KAAK,CAAC,kBAAkB,CAAAE,QAAA,cACxBC,IAAA,WAAQH,KAAK,CAAC,kBAAkB,CAACI,IAAI,CAAC,QAAQ,CAAC,iBAAe,UAAU,CAAC,iBAAe,cAAc,CAAC,gBAAc,MAAM,CAAC,gBAAc,aAAa,CAAAF,QAAA,CAAC,iCAExJ,CAAQ,CAAC,CACT,CAAC,cACLC,IAAA,QAAKF,EAAE,CAAC,aAAa,CAACD,KAAK,CAAC,kCAAkC,CAAC,iBAAe,mBAAmB,CAAAE,QAAA,cAC7FC,IAAA,QAAKH,KAAK,CAAC,gBAAgB,CAAAE,QAAA,CAAC,ioCAU5B,CAAK,CAAC,CACL,CAAC,EACL,CAAC,cACNH,KAAA,QAAKC,KAAK,CAAC,gBAAgB,CAAAE,QAAA,eACvBC,IAAA,OAAIH,KAAK,CAAC,kBAAkB,CAAAE,QAAA,cACxBC,IAAA,WAAQH,KAAK,CAAC,4BAA4B,CAACI,IAAI,CAAC,QAAQ,CAAC,iBAAe,UAAU,CAAC,iBAAe,cAAc,CAAC,gBAAc,OAAO,CAAC,gBAAc,aAAa,CAAAF,QAAA,CAAC,cAEnK,CAAQ,CAAC,CACT,CAAC,cACLC,IAAA,QAAKF,EAAE,CAAC,aAAa,CAACD,KAAK,CAAC,6BAA6B,CAAC,iBAAe,mBAAmB,CAAAE,QAAA,cACxFC,IAAA,QAAKH,KAAK,CAAC,gBAAgB,CAAAE,QAAA,CAAC,kTAI5B,CAAK,CAAC,CACL,CAAC,EACL,CAAC,EACL,CAAC,CAEd"},"metadata":{},"sourceType":"module","externalDependencies":[]}